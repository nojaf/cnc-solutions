{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/pageIntroduction.js","webpack:///./src/templates/solutions.js"],"names":["Header","currentPage","mobile","tablet","desktop","largeDesktop","alt","parseHeaderImage","media","srcSet","src","className","defaultProps","PageIntroduction","aboveTitle","title","lead","underlineWhite","id","dangerouslySetInnerHTML","__html","Solution","thumbnail","thumbnailAlt","url","icon","overview_desktop","overview_large_desktop","overview_mobile","overview_tablet_landscape","overview_tablet_portrait","to","SolutionPage","data","pageContext","currentCulture","culture","solutions","pageInCulture","solutionItems","allSolution","edges","map","node","currentPageId","umbracoId","seo","sl"],"mappings":"4FACA,yBAYA,IAAMA,EAAS,SAAC,GAAqB,IAAD,EAVpC,SAA0BC,GACxB,MAAO,CACLC,OAAQD,EAAW,YAAX,OACRE,OAAQF,EAAW,YAAX,OACRG,QAASH,EAAW,YAAX,QACTI,aAAcJ,EAAW,YAAX,cACdK,IAAKL,EAAW,YAAX,gBAKgDM,CADrB,EAAlBN,aACRK,EAD0B,EAC1BA,IAAKJ,EADqB,EACrBA,OAAQC,EADa,EACbA,OAAQC,EADK,EACLA,QAASC,EADJ,EACIA,aAGtC,OACE,gCACE,iCACE,4BAAQG,MAAM,oBAAoBC,OAAQJ,IAC1C,4BAAQG,MAAM,oBAAoBC,OAAQL,IAC1C,4BAAQI,MAAM,oBAAoBC,OAAQN,IAC1C,4BAAQK,MAAM,oBAAoBC,OAAQP,IAC1C,yBAAKQ,IAAKR,EAAQO,OAAQP,EAAQI,IAAKA,KAEzC,yBAAKK,UAAU,kBACb,yBAAKA,UAAU,kBAkBvBX,EAAOY,aAAe,GAEPZ,O,kCC/Cf,8CA+Bea,IA3BU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC7C,OACE,iCACE,yBAAKL,UAAU,aACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,wBAAwBG,GACtC,yBAAKH,UAAU,mBACb,wBAAIA,UAAU,QAAQI,GACtB,yBAAKL,IAAKO,IAAgBX,IAAK,GAAIK,UAAU,kBAC7C,yBACEA,UAAU,YACVO,GAAG,OACHC,wBAAyB,CAAEC,OAAQJ,W,kCChBjD,4FAOMK,EAAW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,aAAcR,EAAuB,EAAvBA,MAAOS,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAErDC,EAKEJ,EALFI,iBACAC,EAIEL,EAJFK,uBACAC,EAGEN,EAHFM,gBACAC,EAEEP,EAFFO,0BACAC,EACER,EADFQ,yBAEF,OACE,kBAAC,OAAD,CAAMC,GAAIP,EAAKb,UAAU,iBACvB,yBAAKA,UAAU,qBACb,iCACE,4BAAQH,MAAM,oBAAoBC,OAAQkB,IAC1C,4BAAQnB,MAAM,oBAAoBC,OAAQiB,IAC1C,4BACElB,MAAM,oBACNC,OAAQoB,IAEV,4BAAQrB,MAAM,oBAAoBC,OAAQqB,IAC1C,yBACEpB,IAAKkB,EACLnB,OAAQmB,EACRtB,IAAKiB,KAGT,yBAAKb,IAAKe,EAAMnB,IAAK,GAAIK,UAAU,kBAErC,yBAAKA,UAAU,uBACb,4BAAKI,MAqCEiB,UA/BM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtBC,EAAiBD,EAAYE,QAC7BC,EAAYC,YAAcH,EAAgBF,EAAKI,WAC/CE,EAAgBN,EAAKO,YAAYC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAClD,OAAOL,YAAcH,EAAgBQ,MAGvC,OACE,kBAAC,IAAD,CACEP,QAASD,EACTS,cAAeV,EAAYW,UAC3BC,IAAKZ,EAAYY,KAEjB,kBAAC,IAAD,CAAQ7C,YAAaoC,IACrB,kBAAC,IAAqBA,GACtB,iCACE,yBAAK1B,UAAU,aACb,yBAAKO,GAAG,kBACLqB,EAAcG,KAAI,SAAAK,GAAE,OACnB,kBAAC1B,EAAa0B,QAIpB,yBAAKpC,UAAU,wBACb,yBAAKA,UAAU","file":"component---src-templates-solutions-js-15090a3a7a819625d598.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nfunction parseHeaderImage(currentPage) {\n  return {\n    mobile: currentPage[\"headerImage\"][\"mobile\"],\n    tablet: currentPage[\"headerImage\"][\"tablet\"],\n    desktop: currentPage[\"headerImage\"][\"desktop\"],\n    largeDesktop: currentPage[\"headerImage\"][\"large_desktop\"],\n    alt: currentPage[\"headerImage\"][\"headerImageAlt\"],\n  }\n}\n\nconst Header = ({ currentPage }) => {\n  const { alt, mobile, tablet, desktop, largeDesktop } = parseHeaderImage(\n    currentPage\n  )\n  return (\n    <header>\n      <picture>\n        <source media=\"(min-width: 75em)\" srcSet={largeDesktop} />\n        <source media=\"(min-width: 62em)\" srcSet={desktop} />\n        <source media=\"(min-width: 48em)\" srcSet={tablet} />\n        <source media=\"(min-width: 34em)\" srcSet={mobile} />\n        <img src={mobile} srcSet={mobile} alt={alt} />\n      </picture>\n      <div className=\"edge-container\">\n        <div className=\"edge white\" />\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  currentPage: PropTypes.shape({\n    headerImage: PropTypes.shape({\n      mobile: PropTypes.string,\n      tablet: PropTypes.string,\n      desktop: PropTypes.string,\n      \"large-desktop\": PropTypes.string,\n    }),\n    headerImageAlt: PropTypes.string,\n  }),\n}\n\nHeader.defaultProps = {}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport underlineWhite from \"../images/underline-white.png\"\n\nconst PageIntroduction = ({ aboveTitle, title, lead }) => {\n  return (\n    <section>\n      <div className=\"container\">\n        <div className=\"text-center mt-5 mb-2\">\n          <h2 className=\"above text-lowercase\">{aboveTitle}</h2>\n          <div className=\"title-container\">\n            <h1 className=\"mb-0\">{title}</h1>\n            <img src={underlineWhite} alt={\"\"} className=\"underline-bar\" />\n            <div\n              className=\"text-left\"\n              id=\"lead\"\n              dangerouslySetInnerHTML={{ __html: lead }}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nPageIntroduction.propTypes = {\n  aboveTitle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  lead: PropTypes.string.isRequired,\n}\n\nexport default PageIntroduction\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { pageInCulture } from \"../selectors\"\nimport Header from \"../components/header\"\nimport PageIntroduction from \"../components/pageIntroduction\"\n\nconst Solution = ({ thumbnail, thumbnailAlt, title, url, icon }) => {\n  const {\n    overview_desktop,\n    overview_large_desktop,\n    overview_mobile,\n    overview_tablet_landscape,\n    overview_tablet_portrait,\n  } = thumbnail\n  return (\n    <Link to={url} className=\"solution-tile\">\n      <div className=\"solution-tile-img\">\n        <picture>\n          <source media=\"(min-width: 75em)\" srcSet={overview_large_desktop} />\n          <source media=\"(min-width: 62em)\" srcSet={overview_desktop} />\n          <source\n            media=\"(min-width: 48em)\"\n            srcSet={overview_tablet_landscape}\n          />\n          <source media=\"(min-width: 34em)\" srcSet={overview_tablet_portrait} />\n          <img\n            src={overview_mobile}\n            srcSet={overview_mobile}\n            alt={thumbnailAlt}\n          />\n        </picture>\n        <img src={icon} alt={\"\"} className=\"overlay-icon\" />\n      </div>\n      <div className=\"solution-tile-title\">\n        <h3>{title}</h3>\n      </div>\n    </Link>\n  )\n}\n\nconst SolutionPage = ({ data, pageContext }) => {\n  const currentCulture = pageContext.culture\n  const solutions = pageInCulture(currentCulture, data.solutions)\n  const solutionItems = data.allSolution.edges.map(({ node }) => {\n    return pageInCulture(currentCulture, node)\n  })\n\n  return (\n    <Layout\n      culture={currentCulture}\n      currentPageId={pageContext.umbracoId}\n      seo={pageContext.seo}\n    >\n      <Header currentPage={solutions} />\n      <PageIntroduction {...solutions} />\n      <section>\n        <div className=\"container\">\n          <div id=\"solution-tiles\">\n            {solutionItems.map(sl => (\n              <Solution {...sl} />\n            ))}\n          </div>\n        </div>\n        <div className=\"edge-container w-100\">\n          <div className=\"edge\"></div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default SolutionPage;\nexport const query = graphql`\n  query {\n    solutions {\n      url {\n        nl\n        en\n        fr\n      }\n      id\n      headerImage {\n        nl {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n        en {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n        fr {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n      }\n      headerImageAlt {\n        en\n        nl\n        fr\n      }\n      aboveTitle {\n        nl\n        en\n        fr\n      }\n      title {\n        nl\n        en\n        fr\n      }\n      lead {\n        nl\n        en\n        fr\n      }\n    }\n    allSolution {\n      edges {\n        node {\n          key: umbracoId\n          url {\n            en\n            nl\n            fr\n          }\n          icon {\n            nl\n            en\n            fr\n          }\n          thumbnail {\n            nl {\n              homepage_mobile\n              homepage_desktop\n              homepage_large_desktop\n              overview_desktop\n              homepage_tablet\n              overview_large_desktop\n              overview_mobile\n              overview_tablet_landscape\n              overview_tablet_portrait\n            }\n            en {\n              homepage_mobile\n              homepage_desktop\n              homepage_large_desktop\n              overview_desktop\n              homepage_tablet\n              overview_large_desktop\n              overview_mobile\n              overview_tablet_landscape\n              overview_tablet_portrait\n            }\n            fr {\n              homepage_mobile\n              homepage_desktop\n              homepage_large_desktop\n              overview_desktop\n              homepage_tablet\n              overview_large_desktop\n              overview_mobile\n              overview_tablet_landscape\n              overview_tablet_portrait\n            }\n          }\n          thumbnailAlt {\n            en\n            nl\n            fr\n          }\n          title {\n            en\n            nl\n            fr\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}