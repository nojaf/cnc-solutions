{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/templates/products.js","webpack:///./src/components/pageIntroduction.js"],"names":["Header","currentPage","mobile","tablet","desktop","largeDesktop","alt","parseHeaderImage","media","srcSet","src","className","defaultProps","ProductCarouselSlide","productDetailLinkText","productDetailType","variantsLabel","applicationLabel","type","variants","application","thumbnail","url","productTitle","isActive","to","Product","large_desktop","ProductPage","data","pageContext","currentCulture","culture","products","pageInCulture","productItems","allProduct","edges","map","node","currentPageId","umbracoId","seo","id","data-ride","pi","index","href","role","data-slide","aria-hidden","PageIntroduction","aboveTitle","title","lead","underlineWhite","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-templates-products-js-5b6e85071dc2efebcd4d.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nfunction parseHeaderImage(currentPage) {\n  return {\n    mobile: currentPage[\"headerImage\"][\"mobile\"],\n    tablet: currentPage[\"headerImage\"][\"tablet\"],\n    desktop: currentPage[\"headerImage\"][\"desktop\"],\n    largeDesktop: currentPage[\"headerImage\"][\"large_desktop\"],\n    alt: currentPage[\"headerImage\"][\"headerImageAlt\"],\n  }\n}\n\nconst Header = ({ currentPage }) => {\n  const { alt, mobile, tablet, desktop, largeDesktop } = parseHeaderImage(\n    currentPage\n  )\n  return (\n    <header>\n      <picture>\n        <source media=\"(min-width: 75em)\" srcSet={largeDesktop} />\n        <source media=\"(min-width: 62em)\" srcSet={desktop} />\n        <source media=\"(min-width: 48em)\" srcSet={tablet} />\n        <source media=\"(min-width: 34em)\" srcSet={mobile} />\n        <img src={mobile} srcSet={mobile} alt={alt} />\n      </picture>\n      <div className=\"edge-container\">\n        <div className=\"edge white\" />\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  currentPage: PropTypes.shape({\n    headerImage: PropTypes.shape({\n      mobile: PropTypes.string,\n      tablet: PropTypes.string,\n      desktop: PropTypes.string,\n      \"large-desktop\": PropTypes.string,\n    }),\n    headerImageAlt: PropTypes.string,\n  }),\n}\n\nHeader.defaultProps = {}\n\nexport default Header\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { pageInCulture } from \"../selectors\"\nimport Header from \"../components/header\"\nimport PageIntroduction from \"../components/pageIntroduction\"\n\nconst ProductCarouselSlide = ({\n  productDetailLinkText,\n  productDetailType,\n  variantsLabel,\n  applicationLabel,\n  type,\n  variants,\n  application,\n  thumbnail,\n  url,\n  productTitle,\n  isActive,\n}) => {\n  const { mobile } = thumbnail\n  return (\n    <div className={`carousel-item ${isActive ? \"active\" : \"\"}`}>\n      <div className=\"product\">\n        <Link to={url} className={\"header\"}>\n          <img\n            src={mobile}\n            className=\"d-block m-auto\"\n            srcSet={mobile}\n            alt={\"\"}\n          />\n          <h2 className=\"title\">{productTitle}</h2>\n        </Link>\n        <div className=\"content\">\n          <h3>{productDetailType}</h3>\n          <p>{type}</p>\n          <h3>{variantsLabel}</h3>\n          <p>{variants}</p>\n          <h3>{applicationLabel}</h3>\n          <p>{application}</p>\n          <div className=\"corner\" />\n        </div>\n        <Link to={url} className=\"more-info\">\n          {productDetailLinkText}\n          <span className=\"corner\" />\n          <span className=\"inner-corner\" />\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nconst Product = ({\n  productTitle,\n  productDetailLinkText,\n  productDetailType,\n  variantsLabel,\n  applicationLabel,\n  type,\n  variants,\n  application,\n  thumbnail,\n  url,\n}) => {\n  const { desktop, large_desktop } = thumbnail\n  return (\n    <div className=\"product\">\n      <Link to={url} className=\"header\">\n        <picture>\n          <source media=\"(min-width: 75em)\" srcSet={large_desktop} />\n          <img\n            src={desktop}\n            className=\"d-block m-auto\"\n            srcSet={desktop}\n            alt={\"\"}\n          />\n        </picture>\n        <h2 className=\"title\">{productTitle}</h2>\n      </Link>\n      <div className=\"content\">\n        <h3>{productDetailType}</h3>\n        <p>{type}</p>\n        <h3>{variantsLabel}</h3>\n        <p>{variants}</p>\n        <h3>{applicationLabel}</h3>\n        <p>{application}</p>\n        <div className=\"corner\" />\n      </div>\n      <Link to={url} className={\"more-info\"}>\n        {productDetailLinkText}\n        <span className=\"corner\" />\n        <span className=\"inner-corner\" />\n      </Link>\n    </div>\n  )\n}\n\nconst ProductPage = ({ data, pageContext }) => {\n  const currentCulture = pageContext.culture\n  const products = pageInCulture(currentCulture, data.products)\n  const productItems = data.allProduct.edges.map(({ node }) => {\n    return pageInCulture(currentCulture, node)\n  })\n\n  return (\n    <Layout\n      culture={pageContext.culture}\n      currentPageId={pageContext.umbracoId}\n      seo={pageContext.seo}\n    >\n      <Header currentPage={products} />\n      <PageIntroduction {...products} />\n      <section>\n        <div className=\"container\">\n          <div id=\"products\">\n            <div\n              id=\"products-carousel\"\n              className=\"carousel slide d-md-none\"\n              data-ride=\"carousel\"\n            >\n              <div className=\"carousel-inner\">\n                {productItems.map((pi, index) => (\n                  <ProductCarouselSlide\n                    {...products}\n                    {...pi}\n                    isActive={index === 0}\n                  />\n                ))}\n              </div>\n              <a\n                className=\"carousel-control-prev\"\n                href=\"#products-carousel\"\n                role=\"button\"\n                data-slide=\"prev\"\n              >\n                <span\n                  className=\"carousel-control-prev-icon\"\n                  aria-hidden=\"true\"\n                />\n                <span className=\"sr-only\">Previous</span>\n              </a>\n              <a\n                className=\"carousel-control-next\"\n                href=\"#products-carousel\"\n                role=\"button\"\n                data-slide=\"next\"\n              >\n                <span\n                  className=\"carousel-control-next-icon\"\n                  aria-hidden=\"true\"\n                />\n                <span className=\"sr-only\">Next</span>\n              </a>\n            </div>\n            <div id=\"products-grid\">\n              {productItems.map(pi => (\n                <Product {...products} {...pi} />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"edge-container w-100\">\n          <div className=\"edge\"></div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default ProductPage;\nexport const query = graphql`\n  query {\n    products {\n      url {\n        nl\n        en\n        fr\n      }\n      id\n      headerImage {\n        nl {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n        en {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n        fr {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n      }\n      headerImageAlt {\n        en\n        nl\n        fr\n      }\n      aboveTitle {\n        nl\n        en\n        fr\n      }\n      title {\n        nl\n        en\n        fr\n      }\n      lead {\n        nl\n        en\n        fr\n      }\n      productDetailType {\n        nl\n        en\n        fr\n      }\n      productDetailLinkText {\n        nl\n        en\n        fr\n      }\n      variantsLabel: variants {\n        nl\n        en\n        fr\n      }\n      applicationLabel: application {\n        nl\n        en\n        fr\n      }\n    }\n    allProduct {\n      edges {\n        node {\n          key: umbracoId\n          url {\n            en\n            nl\n            fr\n          }\n          type {\n            nl\n            en\n            fr\n          }\n          application {\n            en\n            nl\n            fr\n          }\n          variants {\n            en\n            nl\n            fr\n          }\n          lead {\n            nl\n            en\n            fr\n          }\n          productTitle: aboveTitle {\n            en\n            nl\n            fr\n          }\n          thumbnail {\n            nl {\n              mobile\n              desktop\n              large_desktop\n            }\n            en {\n              mobile\n              desktop\n              large_desktop\n            }\n            fr {\n              mobile\n              desktop\n              large_desktop\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport underlineWhite from \"../images/underline-white.png\"\n\nconst PageIntroduction = ({ aboveTitle, title, lead }) => {\n  return (\n    <section>\n      <div className=\"container\">\n        <div className=\"text-center mt-5 mb-2\">\n          <h2 className=\"above text-lowercase\">{aboveTitle}</h2>\n          <div className=\"title-container\">\n            <h1 className=\"mb-0\">{title}</h1>\n            <img src={underlineWhite} alt={\"\"} className=\"underline-bar\" />\n            <div\n              className=\"text-left\"\n              id=\"lead\"\n              dangerouslySetInnerHTML={{ __html: lead }}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nPageIntroduction.propTypes = {\n  aboveTitle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  lead: PropTypes.string.isRequired,\n}\n\nexport default PageIntroduction\n"],"sourceRoot":""}