{"version":3,"sources":["webpack:///./src/templates/contact.js"],"names":["BelowHeader","aboveTitle","title","className","src","underlineWhite","alt","requiredFields","ContactForm","labelName","labelCompany","labelAddress","labelZip","labelCity","labelCountry","labelEmail","labelPhone","labelMessage","sendButtonText","successText","errorText","aboveForm","React","useState","name","company","address","zip","city","country","email","telephone","message","form","setForm","didSubmit","setDidSubmit","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","updateValue","key","ev","value","target","prevState","formClass","indexOf","id","onSubmit","preventDefault","every","rf","fetch","method","headers","body","JSON","stringify","then","respone","console","log","status","catch","err","htmlFor","type","required","onChange","phone","cols","rows","defaultValue","ContactInfo","aboveAddress","linkedInUrl","facebookUrl","href","rel","data","pageContext","currentCulture","culture","contact","pageInCulture","currentPageId","umbracoId","seo","currentPage","query"],"mappings":"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","file":"component---src-templates-contact-js-efb6c9aa30ba7aa238ca.js","sourcesContent":["import Layout from \"../components/layout\"\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Header from \"../components/header\"\nimport underlineWhite from \"../images/underline-white.png\"\nimport { pageInCulture } from \"../selectors\"\n\nconst BelowHeader = ({ aboveTitle, title }) => {\n  return (\n    <section>\n      <div className=\"container\">\n        <div className=\"text-center mt-5 mb-2\">\n          <h2 className=\"above\">{aboveTitle}</h2>\n          <div className=\"title-container\">\n            <h1 className=\"mb-0\">{title}</h1>\n            <img\n              src={underlineWhite}\n              className=\"underline-bar\"\n              alt={\"underline-bar\"}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst requiredFields = [\"name\", \"company\", \"email\", \"telephone\"]\n\nconst ContactForm = ({\n  labelName,\n  labelCompany,\n  labelAddress,\n  labelZip,\n  labelCity,\n  labelCountry,\n  labelEmail,\n  labelPhone,\n  labelMessage,\n  sendButtonText,\n  successText,\n  errorText,\n  aboveForm,\n}) => {\n  const [form, setForm] = React.useState({\n    name: \"\",\n    company: \"\",\n    address: \"\",\n    zip: \"\",\n    city: \"\",\n    country: \"\",\n    email: \"\",\n    telephone: \"\",\n    message: \"\",\n  })\n\n  const [didSubmit, setDidSubmit] = React.useState(false)\n  const [showSuccessMessage, setShowSuccessMessage] = React.useState(false)\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false)\n\n  const updateValue = key => ev => {\n    const value = ev.target.value\n    setForm(prevState => {\n      return { ...prevState, [key]: value }\n    })\n  }\n\n  const handleSubmit = ev => {\n    ev.preventDefault()\n    setDidSubmit(true)\n    setShowSuccessMessage(false)\n    setShowErrorMessage(false)\n    if (requiredFields.every(rf => !!form[rf])) {\n      fetch(\n        \"https://cncsolutions-backend.azurewebsites.net/umbraco/api/contact/post\",\n        {\n          method: \"POST\",\n          headers:{\n            'Content-Type':'application/json'\n          },\n          body: JSON.stringify(form),\n        }\n      )\n        .then(respone => {\n          console.log(`Response: ${respone.status}`)\n          setShowSuccessMessage(true)\n        })\n        .catch(err => {\n          setShowErrorMessage(true)\n        })\n    }\n  }\n\n  const formClass = key => {\n    if (requiredFields.indexOf(key) !== -1 && !form[key] && didSubmit) {\n      return `form-control is-invalid`\n    } else {\n      return `form-control`\n    }\n  }\n\n  return (\n    <div id=\"contact-form\" className=\"col-12 col-lg-8\">\n      <div className=\"container\">\n        <h2>{aboveForm}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">{labelName}*</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              className={formClass(\"name\")}\n              id=\"name\"\n              required\n              value={form.name}\n              onChange={updateValue(\"name\")}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"company\">{labelCompany}*</label>\n            <input\n              type=\"text\"\n              name=\"company\"\n              id=\"company\"\n              className={formClass(\"company\")}\n              required\n              value={form.company}\n              onChange={updateValue(\"company\")}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"address\">{labelAddress}</label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              id=\"address\"\n              className={formClass(\"address\")}\n              value={form.address}\n              onChange={updateValue(\"address\")}\n            />\n          </div>\n          <div className=\"row\">\n            <div className=\"form-group col-6\">\n              <label htmlFor=\"zip\">{labelZip}</label>\n              <input\n                type=\"text\"\n                name=\"zip\"\n                id=\"zip\"\n                className={formClass(\"zip\")}\n                value={form.zip}\n                onChange={updateValue(\"zip\")}\n              />\n            </div>\n            <div className=\"form-group col-6\">\n              <label htmlFor=\"city\">{labelCity}</label>\n              <input\n                type=\"text\"\n                name=\"city\"\n                id=\"city\"\n                className={formClass(\"city\")}\n                value={form.city}\n                onChange={updateValue(\"city\")}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"country\">{labelCountry}</label>\n            <input\n              type=\"text\"\n              name=\"country\"\n              id=\"country\"\n              className={formClass(\"country\")}\n              value={form.country}\n              onChange={updateValue(\"country\")}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">{labelEmail}*</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className={formClass(\"email\")}\n              required\n              value={form.email}\n              onChange={updateValue(\"email\")}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"telephone\">{labelPhone}*</label>\n            <input\n              type=\"tel\"\n              name=\"telephone\"\n              id=\"telephone\"\n              className={formClass(\"telephone\")}\n              required\n              value={form.phone}\n              onChange={updateValue(\"telephone\")}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"message\">{labelMessage}</label>\n            <textarea\n              name=\"message\"\n              id=\"message\"\n              cols={30}\n              rows={5}\n              className={formClass(\"message\")}\n              defaultValue={form.message}\n              onChange={updateValue(\"message\")}\n            />\n          </div>\n          <div className=\"submit-container\">\n            <button type=\"submit\" className=\"btn-outline-primary\">\n              {sendButtonText}\n              <span className=\"corner\" />\n              <span className=\"inner-corner\" />\n            </button>\n          </div>\n        </form>\n        {showSuccessMessage && (\n          <div id=\"success\" className=\"alert alert-success\">\n            {successText}\n          </div>\n        )}\n        {showErrorMessage && (\n          <div id=\"error\" className=\"alert alert-danger\">\n            {errorText}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst ContactInfo = ({\n  aboveAddress,\n  address,\n  email,\n  phone,\n  linkedInUrl,\n  facebookUrl,\n}) => {\n  return (\n    <div id=\"contact-info\" className=\"col-12 col-lg-4\">\n      <h2>{aboveAddress}</h2>\n      <address>\n        <pre>{address}</pre>\n      </address>\n      <dl>\n        {email && (\n          <>\n            <dt>\n              <i className=\"far fa-envelope mr-1\" />\n            </dt>\n            <dd>{email}</dd>\n          </>\n        )}\n        {phone && (\n          <>\n            <dt>\n              <i className=\"fas fa-phone-alt mr-1\" />\n            </dt>\n            <dd>{phone}</dd>\n          </>\n        )}\n        {linkedInUrl && (\n          <>\n            <dt>\n              <a href={linkedInUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fab fa-linkedin\" />\n              </a>\n            </dt>\n            <dd />\n          </>\n        )}\n        {facebookUrl && (\n          <>\n            <dt>\n              <a href={facebookUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fab fa-facebook-square\" />\n              </a>\n            </dt>\n          </>\n        )}\n        <dd />\n      </dl>\n    </div>\n  )\n}\n\nexport default ({ data, pageContext }) => {\n  const currentCulture = pageContext.culture\n  const contact = pageInCulture(currentCulture, data.contact)\n\n  return (\n    <Layout\n      culture={currentCulture}\n      currentPageId={pageContext.umbracoId}\n      seo={pageContext.seo}\n    >\n      <Header currentPage={contact} />\n      <BelowHeader {...contact} />\n      <section className=\"container\">\n        <div className=\"row\">\n          <ContactInfo {...contact} />\n          <ContactForm {...contact} />\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    contact {\n      id\n      name\n      headerImage {\n        nl {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n        en {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n        fr {\n          mobile\n          tablet\n          desktop\n          large_desktop\n        }\n      }\n      headerImageAlt {\n        en\n        nl\n        fr\n      }\n      aboveTitle {\n        en\n        nl\n        fr\n      }\n      title {\n        en\n        nl\n        fr\n      }\n      labelAddress {\n        en\n        nl\n        fr\n      }\n      labelCity {\n        en\n        nl\n        fr\n      }\n      labelCompany {\n        en\n        nl\n        fr\n      }\n      labelCountry {\n        en\n        nl\n        fr\n      }\n      labelMessage {\n        en\n        nl\n        fr\n      }\n      labelEmail {\n        en\n        nl\n        fr\n      }\n      labelName {\n        en\n        nl\n        fr\n      }\n      labelPhone {\n        en\n        nl\n        fr\n      }\n      labelZip {\n        en\n        nl\n        fr\n      }\n      aboveAddress {\n        en\n        nl\n        fr\n      }\n      address {\n        en\n        nl\n        fr\n      }\n      email {\n        en\n        nl\n        fr\n      }\n      phone {\n        en\n        nl\n        fr\n      }\n      errorText {\n        nl\n        en\n        fr\n      }\n      facebookUrl {\n        en\n        nl\n        fr\n      }\n      linkedInUrl {\n        en\n        nl\n        fr\n      }\n      sendButtonText {\n        en\n        nl\n        fr\n      }\n      successText {\n        en\n        nl\n        fr\n      }\n      errorText {\n        en\n        nl\n        fr\n      }\n    }\n  }\n`\n"],"sourceRoot":""}